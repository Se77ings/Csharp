@page "/tests"
@using FinancasKiss.Business.Models
@using FinancasKiss.Business.Models.Tipos
@using FinancasKiss.Business.Services
@inject DemonstrativoService DemonstrativoService
@inject TransacaoService TransacaoService
@rendermode InteractiveServer

<h3>Tests</h3>

<button class="btn btn-outline-primary" @onclick="AbrirDialog">Adicionar Transação</button>


<div class="d-flex flex-row">
	<dialog open="@showDialog">
		<p>Aqui vou instanciar uma transação.</p>

		<label for="Descricao">Descrição</label>
		<input id="Descricao" @bind="descricao" />

		<label for="Valor">Valor</label>
		<input id="Valor" type="number" @bind="valor" />

		<label for="Tipo">Tipo</label>
		<select id="Tipo" @bind="tipo">
			<option value="Receita">Receita</option>
			<option value="Despesa">Despesa</option>
		</select>

		<label for="Data">Data</label>
		<input id="Data" type="date" @bind="data" />

		<label>Selecione o Demonstrativo</label>
		<select @bind="demonstrativoSelecionado">
			@if (demonstrativos != null)
			{

				@foreach (var d in demonstrativos)
				{
					<option value="@d.Mes">@d.Mes</option>
				}
			}
		</select>


		<button @onclick="FecharDialog">Fechar</button>
		<button @onclick="AdicionarTransacao">Adicionar</button>
	</dialog>
	<nav>

		@if (demonstrativos != null)
		{

			@foreach (var d in demonstrativos)
			{
				<button class="btn btn-outline-success" @onclick="()=> SelecionarMes(d.Mes)">Mês : @d.Mes</button>
			}
		}
		<button class="btn btn-outline-primary p-0" @onclick="CriarDemonstrativo"><span style="padding:10px;font-size:24px">+</span></button>
	</nav>
</div>
<div id="lista-Itens" class="background-red">
	@if (mesSelecionado == 0)
	{
		<p>Nenhum mês selecionado</p>
	}
	else
	{
		<p>Transações:</p>
		<table class="table table-striped table-bordered">
			<thead>
				<tr>
					<th>Descrição</th>
					<th>Valor</th>
					<th>Tipo</th>
					<th>Data</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var t in demonstrativos.FirstOrDefault(d => d.Mes == mesSelecionado)?.Transacoes ?? new List<Transacao>())
				{
					<tr>
						<td>@t.Descricao</td>
						<td>@t.Valor.ToString("C")</td> <!-- Formata como moeda -->
						<td>@t.Tipo</td>
						<td>@t.Data.ToShortDateString()</td> <!-- Formata a data -->
					</tr>
				}
			</tbody>
		</table>
	}
</div>

@code {
	private int mes = 1;
	private int mesSelecionado = 0;
	private bool showDialog = false;


	// FormData
	private string descricao = string.Empty;
	private decimal valor = 0;
	private DateTime data = DateTime.Now;
	private TipoTransacao tipo = TipoTransacao.Receita;
	private int demonstrativoSelecionado = 0;

	private void AbrirDialog()
	{
		if (mesSelecionado != 0)
		{
			demonstrativoSelecionado = mesSelecionado; // Preenche o select com o mês selecionado
		}
		showDialog = true; // Abre o diálogo
	}
	// End.
	List<Demonstrativo> demonstrativos;

	protected override void OnAfterRender(bool firstRender)
	{
		demonstrativos = DemonstrativoService.ObterDemonstrativos();
	}

	private void CriarDemonstrativo()
	{
		DemonstrativoService.CriarDemonstrativo(mes);
		mes++;
		Console.WriteLine($"Demonstrativo criado para o mês {mes}");
	}

	private void AdicionarTransacao()
	{
		if (demonstrativoSelecionado != 0)
		{
			// Obtém o demonstrativo selecionado
			var demonstrativo = demonstrativos.FirstOrDefault(d => d.Mes == demonstrativoSelecionado);

			if (demonstrativo != null)
			{
				// Cria a transação com os dados do formulário
				var transacao = new Transacao(descricao, valor, data, tipo, demonstrativo);

				// Adiciona a transação ao demonstrativo
				TransacaoService.AdicionarTransacao(transacao, demonstrativoSelecionado);

				Console.WriteLine($"Transação adicionada para o mês {demonstrativoSelecionado}");

				// Limpa os campos do formulário
				LimparFormulario();

				// Fecha o diálogo
				showDialog = false;

				StateHasChanged();
			}
		}
	}

	private void LimparFormulario()
	{
		descricao = string.Empty;
		valor = 0;
		data = DateTime.Now;
		tipo = TipoTransacao.Receita;
		demonstrativoSelecionado = 0;
	}
	private void FecharDialog()
	{
		showDialog = false;
		LimparFormulario();
	}



	private EventCallback SelecionarMes(int mes)
	{
		mesSelecionado = mes;
		return EventCallback.Empty;
	}
}